2022-11-09
1.借助的是网络的w25qxx的驱动.
2.进行了一些完善，比如分页写入，写入时如果有数据，进行部分擦除再写入的操作等。
3.配合应用程序，应用还再继续完善。
4.目前的makefile指定了交叉编译环境，是适配rk3399的。
5.dts中的设置：（本身在spi5控制总线上，使用CS0片选，wp和hold引脚硬件已经上拉）
&spi5 {
    status = "okay";
    max-freq = <50000000>;
    GD25Q64CSIG@0 {    //CS0  使用0
        compatible = "rockchip,GD25QXX";//RK3399,GD25Q64";//"rockchip,spidev";  //"Flash,rk3399-spi";//
        reg = <0>;
        spi-max-frequency = <5000000>;
		flash_size = <0x800000>;    //flash 字节大小    
//		spi-cpha;
//		spi-cpol;
    };
};
6.只是进行了简单的读写测试，估计还有问题，后期加入文件的读与写，尽量更加完善。





2022-11-10
1. 读取4096以内的字节是可以，但是数据是否正常，还需要验证。
2. 文件写入有点问题，目前自读自写，发现写512字节之后，都是0xff，之前的512字节是否正确还有待验证。
3.修复driver中的部分bug，还很不完善，需要努力。
4.256字节以内的字节读写应该没有问题。




2022-11-12
1. ./gd25q64_test -v -a 0 -l 20000  读取数据正常 ，从地址0开始，读取20000个字节，每16个字节打印一行，16进制方式打印
2../gd25q64_test -i app_fb   从flash的0地址开始写app_fb文件的内容，可以全部写完。（19328个字节）
3. ./gd25q64_test -i app_fb -a 30 好像还有问题！！！（好像又是正常的）



2022-11-14
1. 每次读写都需要指定地址，否则会从当前地址开始读写，会有一些意外惊喜，比如写完后读，读到的都是ff，其实是读了写后面的位置。
2. 读到文件还有些问题，目前不能去调试解决了。读出来打印到终端好像没啥问题。（板子不在手中了）。
3.后续有时间还需要继续改进。
	3.1把flash中的内容读出来到文件中，然后与写入的文件做对比。
	3.2 文件写入，指定偏移地址写入（是否会多写入未知内容呢？）。
	3.3 大文件写入，超过1M的，或者4M一上的。
	3.4 大文件读取，超过1M的
4.ioctrl增加了读取flash id和flash size 的功能，已测试没问题。后续可以根据ID来对应容量关系，需要找到对应关系，和每种不同flash的ID值。
5.尽量测试所有功能的正确性。






